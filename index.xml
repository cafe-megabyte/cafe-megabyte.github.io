<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Café MegaByte Blog</title>
    <link>http://blog.cafe-megabyte.de/</link>
    <description>Recent content on Café MegaByte Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <copyright>Café MegaByte</copyright>
    <lastBuildDate>Tue, 18 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.cafe-megabyte.de/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bootfähiges Installer-Image erstellen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-18-bootfaehiges-installer-image-erstellen/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-18-bootfaehiges-installer-image-erstellen/</guid>
      <description>Bootfähiges Installer-Image erstellen Grundsätzliches Voraussetzung ist ein Installations-App aus dem Mac App Store. Ziel ist ein direkt bootfähiges Disk Image.
Vorgehen Leeres Disk Image erstellen (10000m= 10 GB, ggf. die Größe nach oben hin anpassen):
hdiutil create -o ~/Desktop/InstallerTMP.dmg -size 10000m -layout SPUD -fs HFS+J  Neu erstelltes Disk Image mounten:
hdiutil attach ~/Desktop/InstallerTMP.dmg -noverify -mountpoint /Volumes/install_build  Nun createinstallmedia ausführen (liegt innerhalb des Installations-Apps aus dem Mac App Store, Pfad ggf.</description>
    </item>
    
    <item>
      <title>Dateiänderungen protokollieren</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-18-dateiaenderungen-protokollieren/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-18-dateiaenderungen-protokollieren/</guid>
      <description>Dateiänderungen protokollieren Grundsätzliches Die Protokolle werden sehr schnell sehr groß und sollten daher insbesondere zeitlich stark eingegrenzt werden.
Vorgehen Alle Änderungen:
sudo fs_usage -w &amp;gt; ~/Desktop/log_all.txt  Protokoll auf einen bestimmten Prozeß einschränken (Name muß exakt stimmen):
sudo fs_usage -w -f filesys PROZESSNAME &amp;gt; ~/Desktop/log.txt  Protokoll per Suchfunktion einschränken:
sudo fs_usage -w -f filesys | grep &amp;quot;SUCHE&amp;quot; &amp;gt; ~/Desktop/log.txt </description>
    </item>
    
    <item>
      <title>SSH Grundeinstellungen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-grundeinstellungen/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-grundeinstellungen/</guid>
      <description>SSH Grundeinstellungen Ziel Nur Anmeldung per Private-Key erlauben, insbesondere keine Paßwort-Anmeldung erlauben.
Vorgehen Konfigdatei öffnen:
sudo nano /private/etc/ssh/sshd_config  PW-Anmeldung verbieten, nur Keys erlauben:
PermitRootLogin no PasswordAuthentication no PermitEmptyPasswords no ChallengeResponseAuthentication no  SSH durchstarten (kann während einer SSH-Sitzung gemacht werden, da nur der Listener neu gestartet wird und bestehende Verbindungen erhalten bleiben):
sudo launchctl stop com.openssh.sshd sudo launchctl start com.openssh.sshd  </description>
    </item>
    
    <item>
      <title>SSH-Tunnel (am Beispiel Screensharing)</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-tunnel/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-tunnel/</guid>
      <description>SSH-Tunnel (am Beispiel Screensharing) Empfehlung  SSH Grundeinstellungen  Voraussetzung  SSH Zugangsschlüssel erzeugen, da hier erklärt wird, man sich paßwortlos verbindet ohne Angabe eines Benutzers.  Vorgehen Der SSH-Tunnel wird zwischen zwei Ports des lokalen und des zu verbindenden Systems hergestellt. Alle lokalen Verbindungen an diesen Port von jeglichen Programmen werden dann automatisch durch den SSH-Tunnel geleitet. Screensharing läuft auf Port 5900, daher muß dieser &amp;ldquo;verbunden&amp;rdquo; werden:
ssh -N SERVER -L 5900:SERVER:5900  Zur Erklärung der Optionen, hier ein Beispiel:</description>
    </item>
    
    <item>
      <title>SSH-Zugangsschlüssel erzeugen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-zugangsschluessel-erzeugen/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-16-ssh-zugangsschluessel-erzeugen/</guid>
      <description>SSH-Zugangsschlüssel erzeugen Empfehlung  SSH Grundeinstellungen  Vorgehen Auf den Schreibtisch wechseln und Keys erzeugen:
cd ~/Desktop/ ssh-keygen -N &amp;quot;&amp;quot; -t rsa -b 8192 -m PEM -f SSH_ZUGANG  Es werden 2 Dateien auf dem Schreibtisch angelegt. SSH_ZUGANG.pub ist der öffentliche Schlüssel und muß auf den Server kopiert werden, mit dem man sich verbinden möchte. Dort auf den Schreibtisch legen und von dort an die Schlüsseldatei anhängen und löschen:
cat ~/Desktop/SSH_ZUGANG.</description>
    </item>
    
    <item>
      <title>Library-Ordner sichtbar machen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-15-library-ordner-sichtbar-machen/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-15-library-ordner-sichtbar-machen/</guid>
      <description>Library-Ordner sichtbar machen  Home-Ordner im Finder anzeigen lassen mit Command-Shift-H. Command-J drücken (blendet die Darstellungsoptionen ein). Im Popup der Darstellungsoptionen die Option &amp;ldquo;Ordner Library anzeigen&amp;rdquo; anhaken.  Alternativ kann auch das Terminal verwendet werden (funktioniert auch, setzt aber den Haken nicht):
setfile -a v ~/Library chflags nohidden ~/Library </description>
    </item>
    
    <item>
      <title>Proxy-Icon verzögerungsfrei anzeigen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-15-proxy-icon-verzoegerungsfrei-anzeigen/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-15-proxy-icon-verzoegerungsfrei-anzeigen/</guid>
      <description>Proxy-Icon verzögerungsfrei anzeigen Gemeint ist das kleine Icon in der Titelleiste von Fenstern, z.B. des Finders. Wird diese Option aktiviert, wird das Icon sofort dargestellt, sobald man den Mauszeiger über den Fenstertitel bewegt.
Im Terminal eingeben:
defaults write -g NSToolbarTitleViewRolloverDelay -float 0 </description>
    </item>
    
    <item>
      <title>Unsichtbare Objekte im Finder ein-ausblenden</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-15-unsichtbare-objekte-im-finder-ein-ausblenden/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-15-unsichtbare-objekte-im-finder-ein-ausblenden/</guid>
      <description>Unsichtbare Objekte im Finder ein-ausblenden Command Shift .</description>
    </item>
    
    <item>
      <title>Automount verhindern</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-14-automount-verhindern/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-14-automount-verhindern/</guid>
      <description>Automount verhindern UUID des Volumes ermitteln:
diskutil info /Volumes/&amp;lt;VOLUME&amp;gt; /etc/fstab editieren:
cd /etc sudo vifs Zeile einfügen (mit i):
UUID=FF9DBDC4-F77F-3F72-A6C2-26676F39B7CE none apfs rw,noauto Statt apfs muß je nach Format ggf. hfs verwendet werden.</description>
    </item>
    
    <item>
      <title>Codesignierung</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-14-codesignierung/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-14-codesignierung/</guid>
      <description>Codesignierung Signierung entfernen:
codesign --remove-signature PATH_TO_APP  Ad-hoc-Signatur hinzufügen (dafür müssen zuvor die erweiterten Attribute gelöscht werden, welches u.a. auch das Quarantäne-Flag enthält):
xattr -cr PATH_TO_APP codesign -s - PATH_TO_APP  Entitlements anzeigen:
codesign --display --entitlements - PATH_TO_APP </description>
    </item>
    
    <item>
      <title>Geladene Erweiterungen anzeigen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-14-geladene-erweiterungen-anzeigen/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-14-geladene-erweiterungen-anzeigen/</guid>
      <description>Geladene Erweiterungen anzeigen Kernel Extenstions:
kmutil inspect  Systemerweiterungen:
systemextensionsctl list  </description>
    </item>
    
    <item>
      <title>Programm dauerhaft im Hell-Modus öffnen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-14-programm-dauerhaft-im-hell-modus-oeffnen/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-14-programm-dauerhaft-im-hell-modus-oeffnen/</guid>
      <description>Programm dauerhaft im Hell-Modus öffnen Bundle-ID des Programms ermitteln:
osascript -e &#39;id of app &amp;quot;App Name&amp;quot;&#39;  oder alternativ (wird unter Identifierangezeigt):
codesign --display --verbose PATH_TO_APP  Programm im Hell-Modus sperren (BUNDLE_ID ersetzen):
defaults write BUNDLE_ID NSRequiresAquaSystemAppearance -bool yes  Sperrung löschen (BUNDLE_ID ersetzen):
defaults delete BUNDLE_ID NSRequiresAquaSystemAppearance  </description>
    </item>
    
    <item>
      <title>ISO-Image eines unlesbaren CD-Formats erstellen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-13-iso-image-eines-unlesbaren-cd-formats-erstellen/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-13-iso-image-eines-unlesbaren-cd-formats-erstellen/</guid>
      <description>ISO-Image eines unlesbaren CD-Formats erstellen Grundsätzliches  Kann z.B. eine alte HFS-CD sein oder ein ganz fremdes Format. Es geht nicht um das Einlesen einer defekten CD.  Vorgehen CD einlegen und warten, bis sich das Laufwerk beruhigt hat.
Falls die CD gemountet wurde, wieder auswerfen:
diskutil unmount &amp;lt;VOM_SCHREIBTISCH_REINZIEHEN&amp;gt;  Unix-Gerätename aus der Geräteliste entnehmen:
diskutil list  führt z.B. zu diesem Output:
/dev/disk3 (external, physical): #: TYPE NAME SIZE IDENTIFIER 0: CD_partition_scheme *760.</description>
    </item>
    
    <item>
      <title>Snapshot Mac-System erstellen und wiederherstellen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-13-snapshot-mac-system-erstellen-und-wiederherstellen/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-13-snapshot-mac-system-erstellen-und-wiederherstellen/</guid>
      <description>Snapshot Mac-System erstellen und wiederherstellen Grundsätzliches  Der Snapshot umfaßt Daten- UND Systemvolume und wird auch gemeinsam zurückgesetzt (Stand: Mac OS 11 Big Sur). Das Erzeugen eines Snapshots ist derzeit nur per tmutil möglich (Stand: Mac OS 11 Big Sur). Time Machine darf deaktiviert sein, ein Backuplaufwerk ist NICHT erforderlich. Diese Snapshots haben die unangenehme Eigenart, sehr volatil zu sein: Sie verschwinden plötzlich!! Um sicher zu sein, daß ein Snapshot vorhanden ist, sollte man ihn &amp;ldquo;rechtzeitig&amp;rdquo; anlegen, das heißt, unmittbelbar bevor man einen Versuch am System unternimmt, den man anschließend ggf.</description>
    </item>
    
    <item>
      <title>sudo per Touch ID bedienen</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-13-sudo-per-touch-id-bedienen/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-13-sudo-per-touch-id-bedienen/</guid>
      <description>sudo per Touch ID bedienen Grundsätzliches Diese Änderung wir bei jedem Systemupdate zurückgesetzt und muß dann wiederholt werden.
Vorgehen  Datei editieren: sudo nano /etc/pam.d/sudo Folgende Zeile OBEN ALS 2. ZEILE einfügen:  auth sufficient pam_tid.so </description>
    </item>
    
    <item>
      <title>Änderungen am Mac-System vornehmen (Big Sur)</title>
      <link>http://blog.cafe-megabyte.de/artikel/2021-05-13-aenderungen-am-mac-system-vornehmen/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/artikel/2021-05-13-aenderungen-am-mac-system-vornehmen/</guid>
      <description>Änderungen am Mac-System vornehmen (Big Sur) Grundsätzliches  Stand: Mac OS 11 Big Sur Die Beschreibung gilt für einen Mac mit Apple Chip. Nachdem die Änderung vollzogen wurde, darf das System nicht mehr in einen Zustand mit höherer Sicherheit zurückgesetzt werden. Mit einem Update des Systems wird die Änderung von Apple zurückgesetzt.  Vorgehen  RecoveryOS booten, dort im Terminal eingeben:  csrutil disable csrutil authenticated-root disable  Mac neustarten (bootet ins normale System).</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>http://blog.cafe-megabyte.de/links/</link>
      <pubDate>Wed, 24 Aug 2016 17:51:42 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/links/</guid>
      <description>Classic Mac  Emaculation Macintosh Garden  </description>
    </item>
    
    <item>
      <title>Impressum</title>
      <link>http://blog.cafe-megabyte.de/impressum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.cafe-megabyte.de/impressum/</guid>
      <description>Impressum Markus Sterk Bildgartenstraße 14 88048 Friedrichshafen Elektronische Post: blog [at] cafe-megabyte.de Datenschutz Auf dieser Webseite werden keine personenbezogenen Daten erhoben, gespeichert oder verarbeitet. Es werden keine Cookies verwendet.
Verweis auf Dritte Diese Website wird auf Github gehostet. Die Github Global Privacy Practices sind hier hinterlegt.</description>
    </item>
    
  </channel>
</rss>
