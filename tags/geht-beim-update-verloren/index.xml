<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geht beim Update verloren on Café MegaByte Blog</title>
    <link>https://blog.cafe-megabyte.de/tags/geht-beim-update-verloren/</link>
    <description>Recent content in Geht beim Update verloren on Café MegaByte Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <copyright>Café MegaByte</copyright>
    <lastBuildDate>Thu, 21 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.cafe-megabyte.de/tags/geht-beim-update-verloren/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Virtueller Mac auf ARM</title>
      <link>https://blog.cafe-megabyte.de/artikel/virtueller-mac-auf-arm/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/virtueller-mac-auf-arm/</guid>
      <description>Virtueller Mac auf ARM Allgemein  Ein virtueller Mac auf ARM wird nicht installiert, sondern wie ein iPhone aus einer .ipsw-Datei wiederhergestellt (IPhone SoftWare). Die ARM-Virtualisierung funktioniert erst ab Mac OS 12 Monterey. Kostenloser Virtualisierer (und Emulator auf QEMU-Basis): UTM  Vorgehen  Restore Image der gewünschten Mac OS Version laden: IPSW.me VM erstellen und Benutzer anlegen Rosetta installieren: softwareupdate --install-rosetta Developer Tools installieren: xcode-select --install Ggf. alle Updates installieren: softwareupdate -i -r --include-config-data  Recovery OS booten Das Starten ins Recovery OS kann derzeit nur über einen Trick erreicht werden:</description>
    </item>
    
    <item>
      <title>Änderungen am Mac-System vornehmen</title>
      <link>https://blog.cafe-megabyte.de/artikel/aenderungen-am-mac-system-vornehmen/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/aenderungen-am-mac-system-vornehmen/</guid>
      <description>Änderungen am Mac-System vornehmen Grundsätzliches  Stand: Mac OS 12 Monterey Die Beschreibung gilt für einen Mac mit Apple Chip. Nachdem die Änderung vollzogen wurde, darf das System nicht mehr in einen Zustand mit höherer Sicherheit zurückgesetzt werden. Mit einem Update des Systems wird die Änderung von Apple zurückgesetzt.  Vorgehen  RecoveryOS booten, dort im Terminal eingeben:  csrutil disable csrutil authenticated-root disable  Mac neustarten (bootet ins normale System).</description>
    </item>
    
    <item>
      <title>Alle Updates installieren</title>
      <link>https://blog.cafe-megabyte.de/artikel/alle-updates-installieren/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/alle-updates-installieren/</guid>
      <description>Alle Updates installieren Zuerst müssen alle Updates per Systemeinstellungen eingespielt werden. Dann:
Alle noch verfügbaren Updates auflisten:
softwareupdate -l --include-config-data  Alle hiervon empfohlenen Updates (&amp;ldquo;recommended YES&amp;rdquo;) einspielen:
softwareupdate -i -r --include-config-data </description>
    </item>
    
    <item>
      <title>Mac wacht alle 2 Stunden auf</title>
      <link>https://blog.cafe-megabyte.de/artikel/mac-wacht-alle-2-stunden-auf/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/mac-wacht-alle-2-stunden-auf/</guid>
      <description>Mac wacht alle 2 Stunden auf Grundsätzliches Der Grund für das Aufwachen ist der mDNSResponder, der auf bestimmte Pakete wartet. Bei Macs mit SSD mag das egal sein, aber wenn der Mac noch eine Festplatte hat, möchte man das vermeiden.
Voraussetzung Mittlerweile ist es hierzu erforderlich, die Sicherheitseinstellungen des Systems teilweise dauerhaft zu deaktivieren, siehe hierzu Änderungen am Mac-System vornehmen.
Vorgehen Prüfen (bis 10.11):
syslog | grep &amp;quot;Wake reason&amp;quot;  Prüfen (ab 10.</description>
    </item>
    
    <item>
      <title>Aliaspfeil entfernen</title>
      <link>https://blog.cafe-megabyte.de/artikel/aliaspfeil-entfernen/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/aliaspfeil-entfernen/</guid>
      <description>Aliaspfeil entfernen Grundsätzliches Das Entfernen des optisch häßlichen Alias-Pfeils im Finder funktioniert seit es Mac OS X gibt. Es geht bis heute unter Big Sur auf einem Mac mit Apple Silicon. Mittlerweile ist es hierzu erforderlich, die Sicherheitseinstellungen des Systems teilweise dauerhaft zu deaktivieren, siehe hierzu Änderungen am Mac-System vornehmen.
Vorgehen Wenn das System änderbar ist, die Icon-Datei umbenennen:
sudo mv /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/AliasBadgeIcon.icns \ /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/AliasBadgeIcon_OFFLINE.icns  </description>
    </item>
    
    <item>
      <title>SSH Grundeinstellungen</title>
      <link>https://blog.cafe-megabyte.de/artikel/ssh-grundeinstellungen/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/ssh-grundeinstellungen/</guid>
      <description>SSH Grundeinstellungen Ziel Nur Anmeldung per Private-Key erlauben, insbesondere keine Paßwort-Anmeldung erlauben.
Vorgehen Manche SSH-Verbindungen (z.B. von iPhone-Kurzbefehlen) respektieren die $PATH-Variablen nicht. Diese muß explizit gesetzt werden (und in der Config anschließend erlaubt):
echo &amp;quot;PATH=$PATH&amp;quot; &amp;gt; ~/.ssh/environment  Konfigdatei öffnen:
sudo nano /private/etc/ssh/sshd_config  PW-Anmeldung verbieten, nur Keys erlauben:
PermitRootLogin no PasswordAuthentication no PermitEmptyPasswords no ChallengeResponseAuthentication no PermitUserEnvironment yes  SSH durchstarten (kann während einer SSH-Sitzung gemacht werden, da nur der Listener neu gestartet wird und bestehende Verbindungen erhalten bleiben):</description>
    </item>
    
    <item>
      <title>Automount verhindern</title>
      <link>https://blog.cafe-megabyte.de/artikel/automount-verhindern/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/automount-verhindern/</guid>
      <description>Automount verhindern UUID des Volumes ermitteln:
diskutil info /Volumes/&amp;lt;VOLUME&amp;gt; /etc/fstab editieren:
cd /etc sudo vifs Zeile einfügen (mit i in den Editiermodus wechseln):
UUID=FF9DBDC4-F77F-3F72-A6C2-26676F39B7CE none apfs rw,noauto Statt apfs muß je nach Format ggf. hfs verwendet werden.
Mit ESC zurück in den Kommandomodus wechseln und mit folgendem Kommando die gemachten Änderungen schreiben und beenden:
:wq </description>
    </item>
    
    <item>
      <title>sudo per Touch ID bedienen</title>
      <link>https://blog.cafe-megabyte.de/artikel/sudo-per-touch-id-bedienen/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.cafe-megabyte.de/artikel/sudo-per-touch-id-bedienen/</guid>
      <description>sudo per Touch ID bedienen Grundsätzliches Diese Änderung wir bei jedem Systemupdate zurückgesetzt und muß dann wiederholt werden.
Vorgehen  Datei editieren: sudo nano /etc/pam.d/sudo Folgende Zeile OBEN ALS 2. ZEILE einfügen:  auth sufficient pam_tid.so </description>
    </item>
    
  </channel>
</rss>
